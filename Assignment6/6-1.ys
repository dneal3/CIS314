.pos 0
init:
    irmovl Stack, %esp
    irmovl Stack, %ebp
    call Main
    halt
    
    .align 4
array:
    .long 0x0009
    .long 0x0008
    .long 0x0007
    .long 0x0006
    .long 0x0005
    .long 0x0004
    .long 0x0003
    .long 0x0002
    .long 0x0001
    .long 0x0000
Main:
    pushl %ebp
    rrmovl %esp, %ebp
    irmovl $10, %eax 
    pushl %eax
    irmovl array, %eax 
    pushl %eax
    call Bubblesort 
    brk
    rrmovl %ebp, %esp
    popl %ebp
    ret

Bubblesort:
    pushl %ebp
    rrmovl %esp, %ebp
    mrmovl 8(%ebp), %eax
    mrmovl 12(%ebp), %ecx
    irmovl $1, %ebx
    pushl %ecx
    
Outer4:
    mrmovl 8(%ebp) , %eax
    subl %ebx, %ecx
    rrmovl %ecx, %edi
    je End

Inner4:
    mrmovl 0(%eax), %edx #a[j]
    mrmovl 4(%eax), %esi #a[j+1]
    subl %edx, %esi
    jl Swap
    

Reset:
    irmovl $4, %ebx
    addl %ebx, %eax
    irmovl $1, %ebx
    subl %ebx, %edi
    jne Inner4
    jmp Outer4

Swap: 
    mrmovl 4(%eax), %esi
    rmmovl %edx, 4(%eax)
    rmmovl %esi, 0(%eax)
    jmp Reset
        
End:
    popl %ebx
    popl %ebp
    
    .pos 0x100
Stack:
    